@model Pharmacy.Models.ItemValidation

@{
    ViewBag.Title = "AddItemdfdfdfdf";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
}

<h3>Add Item</h3>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <ol class="breadcrumb">
        <li>@Html.ActionLink("All Items", "AllItems", "Item")</li>
        <li class="active">Add Item</li>
    </ol>

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.ItemTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ItemTypeID, new SelectList(Enumerable.Empty<SelectListItem>()), "Please Select", new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.ItemTypeID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Shelf, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Shelf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Shelf, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SalePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TabletsPerPack, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.TabletsPerPack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TabletsPerPack, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.SalePricePerTablet, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.SalePricePerTablet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalePricePerTablet, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-2">
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>

            @*@Html.LabelFor(model => model.SalePricePerTablet, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.SalePricePerTablet, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SalePricePerTablet, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                </div>*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "AllItems")
</div>

@*<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>*@
<script type="text/javascript">

    $(document).ready(function () {
        $.ajax({
            url: "ReturnJSONDataToAJax",
            type: "GET",
            contentType: "application/json; charset=utf-8",
            datatype: JSON,
            success: function (result) {
                $(result).each(function () {
                    $("#ItemTypeID").append($("<option></option>").val(this.ID).html(this.Name));
                });
                //$("#target").prop("selectedIndex", 0);
            },
            error: function (data) { }
        });
    });
</script>
