
@model Pharmacy.Models.ItemValidation

@{
    ViewBag.Title = "AddSale";
    Layout = "~/Views/Shared/_LayoutLeftMenu.cshtml";
}
<link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<style type="text/css">
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <hr />
    <div class="row" id="divItemAdd">

        @Html.HiddenFor(model => model.ID)
        <div class="col-md-5 col-lg-5 col-md-5">
            <span>Item name</span>
            <span>@Html.TextBoxFor(model => model.Name, new { @class = "form-control" })</span>
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span>Pack Size</span>
            <span>@Html.TextBoxFor(model => model.PackSize, new { @class = "form-control" })</span>
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span>P/L</span>
            <span>@Html.TextBox("PackLoose", null, new { @class = "form-control" })</span>
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span>Price</span>
            <span>@Html.TextBoxFor(model => model.SalePrice, new { @class = "form-control" }) @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })</span>
            @Html.HiddenFor(model => model.SalePercentage)
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span>Qty</span>
            <span>
                @*@Html.TextBoxFor(model => model.Quantity, null, new { @class = "form-control", disabled = "true", onblur = "return TotalAmt(this.value)" })*@
                @Html.TextBoxFor(model => model.Quantity, null, new { @class = "form-control", disabled = "true", onblur = "return TotalAmt(this.value)" })
            </span>
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span>Total</span>
            <span>@Html.TextBox("TotalAmount", null, new { @class = "form-control" })</span>
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span>Stock</span>
            <span>@Html.TextBoxFor(model => model.TotalStock, null, new { @class = "form-control" })</span>
        </div>

        <div class="col-lg-1 col-md-1 col-sm-1">
            <span></span><br />
            <span><input type="button" value="Add" class="btn btn-primary" onclick="updateItemTable()" /></span>
        </div>

    </div>

    <div class="row">
        <div class="col-md-8">
            <table id="tblItem" class="display"></table>
        </div>

        <div class="col-md-4" style="bbackground-color:yellow">

            <div>Total Amount: <label id="sumTotalAmt">678</label></div>
            <div>Special Discount: <input type="text" id="sumTotalAmt" /></div>
            <div>After Discount: <label id="sumTotalAmtAfterDiscount" title="Total Amount - Percentage - Special Discount">650</label></div>
            <div>Amount Paid: <input type="text" id="AmtPaid" /></div>
            <div>Arears: <label id="sumTotalAmtAfterDiscount">650</label></div>
        </div>

    </div>
}

<script type="text/javascript">

    $(document).ready(function () {
        EnabledisableControl(true);

        $("#Name").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Sale/MedicineList",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name, id: item.ID };
                        }))
                    }
                })
            },
            select: function (event, ui) {
                var itemID = ui.item.id;
                $.ajax({
                    url: "/Sale/GetItemByID",
                    type: "POST",
                    dataType: "json",
                    data: { itemID: itemID },
                    success: function (data) {
                        $("#PackSize").val(data.PackSize);
                        $("#SalePrice").val(data.SalePrice);
                        $("#SalePercentage").val(data.SalePercentage);
                        $("#TotalStock").val(data.TotalStock);
                        $("#ID").val(itemID);
                        EnabledisableControl(false);
                    }
                })
            }
        });

    })

    function TotalAmt(quantity) {
        var salePrice = $("#SalePrice").val();
        var totalAmt = salePrice * quantity;
        $("#TotalAmount").val(totalAmt);
    }

    function updateItemTable() {

        var existingRowDue2DataTable = $("#tblItem").find("tr:gt(0)");

        var ItemID = $("#ID").val();
        var itemName = $("#Name").val();
        var price = $("#SalePrice").val();
        var Percentage = $("#SalePercentage").val();
        var quantity = $("#Quantity").val();
        var totalAmt = $("#TotalAmount").val();
        var inStock = $("#TotalStock").val();

        var tr = '';

    if (existingRowDue2DataTable.length == 0) {

        tr = '<thead><tr><th>Item Name </th>';
        tr = tr + '<th> Price </th>';
        tr = tr + '<th> Percentage </th>';
        tr = tr + '<th> Quantity </th>';
        tr = tr + '<th> Net Total </th>';
        tr = tr + '<th> Stock </th> </thead>';
    }

        tr = tr + '<tbody><tr id = "' + ItemID + '"><td>' + itemName + '</td>';
        tr = tr + '<td>' + price + '</td>';
        tr = tr + '<td>' + Percentage + '%</td>';
        tr = tr + '<td>' + quantity + '</td>';
        tr = tr + '<td>' + totalAmt + '</td>';
        tr = tr + '<td>' + inStock + '</td></tr></tbody>';
        $("#tblItem").append(tr);

    if ( ! $.fn.DataTable.isDataTable( '#tblItem' ) ) {
            $('#tblItem').dataTable({
                "select": {
                    style: 'single'
                },
                "paging": false,
                "searching": false,
                "lengthChange": true, 
                "ordering": false
            });
}
        //if (existingRowDue2DataTable.length == 0) {
        //    var table = $('#tblItem').DataTable({
        //        "select": {
        //            style: 'single'
        //        },
        //        "paging": false,
        //        "searching": false,
        //        "lengthChange": true, 
        //        "ordering": false
        //    });
   

    $('#Name').val('');
    $('#PackSize').val('');
    $('#PackLoose').val('');
    $('#SalePrice').val('');
    $('#Quantity').val('');
    $('#TotalAmount').val('');
    $('#TotalStock').val('');
    EnabledisableControl(true);

    }

    function EnabledisableControl(value){
    $('#PackSize').prop("disabled", value);
    $('#PackLoose').prop("disabled", value);
    $('#SalePrice').prop("disabled", value);
    $('#Quantity').prop("disabled", value);
    $('#TotalAmount').prop("disabled", value);
    $('#TotalStock').prop("disabled", value);
    }




   // $('#tblItem').on( 'click', 'tr', function () {
   //     if ( $(this).hasClass('selected') ) {
     //       $(this).removeClass('selected');
     //   }
     //   else {
     //       $('#tblItem').DataTable().$('tr.selected').removeClass('selected');
     //       $(this).addClass('selected');
     //   }
    //} );

    //$('#button').click( function () {
    //    $('#tblItem').DataTable().row('.selected').remove().draw( false );
    //} );



    $('#tblItem').on('click', 'tbody tr', function() {
        var rowData = $('#tblItem').DataTable().row(this).innerText;

        for(var i = 0; i<rowData.length; i++){
        $("#Name").val(rowData[0]);
        $("#SalePrice").val(rowData[1]);
        $("#Quantity").val(rowData[3]);
        $("#TotalAmount").val(rowData[4]);
        $("#TotalStock").val(rowData[5]);
        EnabledisableControl(false);
}


    })

</script>








